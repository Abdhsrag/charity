# Generated by Django 5.2.1 on 2025-05-30 18:13

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Fname', models.CharField(max_length=100)),
                ('Lname', models.CharField(max_length=100)),
                ('Email', models.CharField(max_length=100, unique=True)),
                ('Mphone', models.CharField(max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user/imgs')),
                ('Pass', models.CharField(max_length=100)),
                ('Type', models.CharField(choices=[('admin', 'Admin'), ('owner', 'Owner'), ('donor', 'Donor')], max_length=10)),
                ('Bdate', models.DateField(blank=True, null=True)),
                ('Regist_date', models.DateTimeField(auto_now_add=True)),
                ('Facebook_url', models.TextField(default=None, null=True)),
                ('Country', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
